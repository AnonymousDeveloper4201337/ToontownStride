diff a/toontown/makeatoon/TrackShop.py b/toontown/makeatoon/TrackShop.py	(rejected hunks)
@@ -1,38 +1,35 @@
 from pandac.PandaModules import *
+from panda3d.core import NodePath, ModelNode
 from direct.fsm import StateData
 from direct.gui.DirectGui import *
 from toontown.toonbase import TTLocalizer, ToontownGlobals
 from direct.directnotify import DirectNotifyGlobal
-from toontown.toonbase.ToontownBattleGlobals import AvPropsNew
+from toontown.toonbase import ToontownBattleGlobals
 
 class TrackShop(StateData.StateData):
     notify = DirectNotifyGlobal.directNotify.newCategory('TrackShop')
 
     def __init__(self, doneEvent):
         StateData.StateData.__init__(self, doneEvent)
-        self.quest = None
-        self.label = None
-        self.leftButton = None
-        self.rightButton = None
-        self.track = None
-        self.icon = None
         self.loaded = False
         self.index = 0
+        self.buttonPath = None
+        self.curTrackLabel = None
         return
 
+    def showButtons(self):
+        self.buttonPath.show()
+        self.curTrackLabel.show()
+
+    def hideButtons(self):
+        self.buttonPath.hide()
+        self.curTrackLabel.hide()
+
     def enter(self):
         base.disableMouse()
         self.acceptOnce('last', self.__handleBackward)
         self.acceptOnce('next', self.__handleForward)
 
-    def showButtons(self):
-        for element in [self.quest, self.label, self.leftButton, self.rightButton, self.track, self.icon]:
-            element.show()
-
-    def hideButtons(self):
-        for element in [self.quest, self.label, self.leftButton, self.rightButton, self.track, self.icon]:
-            element.hide()
-
     def exit(self):
         self.ignore('last')
         self.ignore('next')
